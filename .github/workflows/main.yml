name: Auto Update M3U
on:
  schedule:
    - cron: '0 */6 * * *' # 每 12 小时触发一次
  workflow_dispatch:
jobs:
  update-m3u:
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: doit
        uses: actions/checkout@v2
      - name: Clear existing file
        run: >
          if [ -f bj-unicom-iptv.m3u ]; then
            > bj-unicom-iptv.m3u
          fi
      - name: Get Gist
        run: |
          # 假设你已经安装了 curl 和 jq
          GIST_CONTENT=$(curl -s https://api.github.com/gists/93cf74947770066743fff7c7f4fc5820 | jq -r '.files."bj-unicom-iptv.m3u".content')
          echo "${GIST_CONTENT}"
          # 假设要将 "old_string" 替换为 "new_string"
          OLD_STRING='rtp://'
          NEW_STRING='http://192.168.1.4:8012/rtp/'
          REPLACED_CONTENT="${GIST_CONTENT//$OLD_STRING/$NEW_STRING}"
          echo "${REPLACED_CONTENT}" > bj-unicom-iptv.m3u

          if [ -n "$(git status --porcelain)" ]; then
            git config --global user.email "kimi@kimi.com"
            git config --global user.name "kimi"
            git add bj-unicom-iptv.m3u
            git commit -m "Updated m3u with replaced strings"
            git push git@github.com:Dendim0n/home-bjunicom-iptv.git main

            git fetch --tags
            VERSION=$(git tag | sort -V | tail -n 1)
            echo "Current version is: $VERSION"
            if [ -z "$VERSION" ]; then
              VERSION="v0.0.0"
            fi
            NEW_VERSION=$(echo $VERSION | awk -F. -v OFS=. '{$NF++; print}')
            echo "New version is: $NEW_VERSION"
            echo ::set-output name=version::$NEW_VERSION
          else
            echo "No changes detected"
          fi

      - name: Create release
        if: steps.get_version.outputs.version != ''
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          
      - name: Upload release asset
        if: steps.get_version.outputs.version != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bj-unicom-iptv.m3u
          asset_name: bj-unicom-iptv.m3u
          asset_content_type: application/x-mpegURL